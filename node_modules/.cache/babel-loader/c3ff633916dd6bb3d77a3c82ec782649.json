{"ast":null,"code":"var _jsxFileName = \"/Users/dpalomanes/IdeaProjects/apiagencies/client/src/ThemeSwitcher.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'client';\n\nclass ThemeSwitcher extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      theme: null,\n      dropdownOpen: false\n    };\n\n    this.toggleDropdown = () => {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    };\n\n    this.resetTheme = evt => {\n      evt.preventDefault();\n      this.setState({\n        theme: null\n      });\n    };\n\n    this.chooseTheme = (theme, evt) => {\n      evt.preventDefault();\n      this.setState({\n        theme\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          theme = _this$state.theme,\n          dropdownOpen = _this$state.dropdownOpen;\n    const themeClass = theme ? theme.toLowerCase() : 'secondary';\n    return React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"h1 mb-4 w-100 text-center text-\".concat(themeClass),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, theme || 'Default'), React.createElement(ButtonDropdown, {\n      isOpen: dropdownOpen,\n      toggle: this.toggleDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"caret\",\n      color: themeClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, theme || 'Custom', \" Theme\"), React.createElement(DropdownToggle, {\n      caret: true,\n      size: \"lg\",\n      color: themeClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      onClick: e => this.chooseTheme('Primary', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Primary Theme\"), React.createElement(DropdownItem, {\n      onClick: e => this.chooseTheme('Danger', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Danger Theme\"), React.createElement(DropdownItem, {\n      onClick: e => this.chooseTheme('Success', e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Success Theme\"), React.createElement(DropdownItem, {\n      divider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(DropdownItem, {\n      onClick: this.resetTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Default Theme\"))));\n  }\n\n}\n\nexport default ThemeSwitcher;","map":{"version":3,"sources":["/Users/dpalomanes/IdeaProjects/apiagencies/client/src/ThemeSwitcher.js"],"names":["React","Component","Button","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","ThemeSwitcher","state","theme","dropdownOpen","toggleDropdown","setState","resetTheme","evt","preventDefault","chooseTheme","render","themeClass","toLowerCase","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,cAAjC,EAAiDC,YAAjD,EAA+DC,YAA/D,QAAmF,QAAnF;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCO,KAFkC,GAE1B;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,YAAY,EAAE;AAA7B,KAF0B;;AAAA,SAIlCC,cAJkC,GAIjB,MAAM;AACnB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,YAAY,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAA5B,OAAd;AACH,KANiC;;AAAA,SAQlCG,UARkC,GAQrBC,GAAG,IAAI;AAChBA,MAAAA,GAAG,CAACC,cAAJ;AACA,WAAKH,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE;AAAT,OAAd;AACH,KAXiC;;AAAA,SAalCO,WAbkC,GAapB,CAACP,KAAD,EAAQK,GAAR,KAAgB;AAC1BA,MAAAA,GAAG,CAACC,cAAJ;AACA,WAAKH,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACH,KAhBiC;AAAA;;AAkBlCQ,EAAAA,MAAM,GAAG;AAAA,wBAE2B,KAAKT,KAFhC;AAAA,UAEGC,KAFH,eAEGA,KAFH;AAAA,UAEUC,YAFV,eAEUA,YAFV;AAGL,UAAMQ,UAAU,GAAGT,KAAK,GAAGA,KAAK,CAACU,WAAN,EAAH,GAAyB,WAAjD;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,+GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAM,MAAA,SAAS,2CAAoCD,UAApC,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkET,KAAK,IAAI,SAA3E,CAFJ,EAII,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEC,YAAxB;AAAsC,MAAA,MAAM,EAAE,KAAKC,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,KAAK,EAAEO,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCT,KAAK,IAAI,QAAhD,WADJ,EAEI,oBAAC,cAAD;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,IAAI,EAAC,IAA3B;AAAgC,MAAA,KAAK,EAAES,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEE,CAAC,IAAI,KAAKJ,WAAL,CAAiB,SAAjB,EAA4BI,CAA5B,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAKJ,WAAL,CAAiB,QAAjB,EAA2BI,CAA3B,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEA,CAAC,IAAI,KAAKJ,WAAL,CAAiB,SAAjB,EAA4BI,CAA5B,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,EAII,oBAAC,YAAD;AAAc,MAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE,KAAKP,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,CAHJ,CAJJ,CADJ;AAoBH;;AA3CiC;;AA+CtC,eAAeN,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'client';\n\nclass ThemeSwitcher extends Component {\n\n    state = { theme: null, dropdownOpen: false }\n\n    toggleDropdown = () => {\n        this.setState({ dropdownOpen: !this.state.dropdownOpen });\n    }\n\n    resetTheme = evt => {\n        evt.preventDefault();\n        this.setState({ theme: null });\n    }\n\n    chooseTheme = (theme, evt) => {\n        evt.preventDefault();\n        this.setState({ theme });\n    }\n\n    render() {\n\n        const { theme, dropdownOpen } = this.state;\n        const themeClass = theme ? theme.toLowerCase() : 'secondary';\n\n        return (\n            <div className=\"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\">\n\n                <span className={`h1 mb-4 w-100 text-center text-${themeClass}`}>{theme || 'Default'}</span>\n\n                <ButtonDropdown isOpen={dropdownOpen} toggle={this.toggleDropdown}>\n                    <Button id=\"caret\" color={themeClass}>{theme || 'Custom'} Theme</Button>\n                    <DropdownToggle caret size=\"lg\" color={themeClass} />\n                    <DropdownMenu>\n                        <DropdownItem onClick={e => this.chooseTheme('Primary', e)}>Primary Theme</DropdownItem>\n                        <DropdownItem onClick={e => this.chooseTheme('Danger', e)}>Danger Theme</DropdownItem>\n                        <DropdownItem onClick={e => this.chooseTheme('Success', e)}>Success Theme</DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem onClick={this.resetTheme}>Default Theme</DropdownItem>\n                    </DropdownMenu>\n                </ButtonDropdown>\n\n            </div>\n        );\n\n    }\n\n}\n\nexport default ThemeSwitcher;"]},"metadata":{},"sourceType":"module"}