{"ast":null,"code":"var _jsxFileName = \"/Users/dpalomanes/IdeaProjects/apiagencies/client/src/components/sitesdropdownlist.js\";\nimport React from 'react';\n\nclass DropDown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sites: []\n    };\n  }\n\n  componentWillMount() {\n    let initialSites = [];\n    fetch('http://localhost:9001/sites').then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      initialSites = data.map(site => {\n        return site;\n      });\n      console.log(initialSites);\n      this.setState({\n        sites: initialSites\n      });\n    });\n  }\n\n  change(event) {\n    console.log(event);\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"drop-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"I would like to render a dropdown here from the values object\"), React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" onChange=\", this.change, this.state.sites.map(obj => {\n      return React.createElement(\"option\", {\n        value: obj.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, obj.name);\n    })));\n  }\n\n}\n\nexport default DropDown;","map":{"version":3,"sources":["/Users/dpalomanes/IdeaProjects/apiagencies/client/src/components/sitesdropdownlist.js"],"names":["React","DropDown","Component","constructor","props","state","sites","componentWillMount","initialSites","fetch","then","response","json","data","console","log","map","site","setState","change","event","value","target","render","obj","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAEH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,QAAIC,YAAY,GAAG,EAAnB;AACAC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAGOF,IAHP,CAGYG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACJL,MAAAA,YAAY,GAAGK,IAAI,CAACG,GAAL,CAAUC,IAAD,IAAU;AAC9B,eAAOA,IAAP;AACH,OAFc,CAAf;AAGAH,MAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACA,WAAKU,QAAL,CAAc;AACVZ,QAAAA,KAAK,EAAEE;AADG,OAAd;AAGH,KAZD;AAaH;;AAEDW,EAAAA,MAAM,CAACC,KAAD,EAAO;AAETN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,SAAKF,QAAL,CAAc;AAACG,MAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaD;AAArB,KAAd;AACH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,WAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmB,KAAKJ,MAAxB,EAGI,KAAKd,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAsBQ,GAAD,IAAS;AAC1B,aAAO;AAAQ,QAAA,KAAK,EAAEA,GAAG,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBD,GAAG,CAACE,IAA5B,CAAP;AAEH,KAHD,CAHJ,CAFG,CAAP;AAWH;;AA3CkC;;AA8CvC,eAAezB,QAAf","sourcesContent":["import React from 'react';\n\nclass DropDown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { sites: [] };\n\n    }\n\n    componentWillMount() {\n        let initialSites = [];\n        fetch('http://localhost:9001/sites')\n            .then(response => {\n                return response.json();\n            }).then(data => {\n                console.log(data)\n            initialSites = data.map((site) => {\n                return site\n            });\n            console.log(initialSites);\n            this.setState({\n                sites: initialSites,\n            });\n        });\n    }\n\n    change(event){\n\n        console.log(event)\n        this.setState({value: event.target.value});\n    }\n\n    render(){\n        return <div className=\"drop-down\">\n            <p>I would like to render a dropdown here from the values object</p>\n            <select> onChange={this.change}\n                {\n\n                this.state.sites.map((obj) => {\n                    return <option value={obj.id}>{obj.name}</option>\n\n                })\n            }</select>\n        </div>;\n    }\n}\n\nexport default DropDown;"]},"metadata":{},"sourceType":"module"}